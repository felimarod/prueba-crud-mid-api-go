{
    "swagger": "2.0",
    "info": {
        "title": "beego Test API",
        "description": "beego has a very cool tools to autogenerate documents for your API",
        "version": "1.0.0",
        "termsOfService": "http://beego.me/",
        "contact": {
            "email": "astaxie@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "basePath": "/v1",
    "paths": {
        "/contacto/": {
            "get": {
                "tags": [
                    "contacto"
                ],
                "description": "get Contacto",
                "operationId": "ContactoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Contacto"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "contacto"
                ],
                "description": "create Contacto",
                "operationId": "ContactoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Contacto content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Contacto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Contacto"
                    },
                    "400": {
                        "description": "The request contains an incorrect data type or an invalid parameter"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/contacto/{id}": {
            "get": {
                "tags": [
                    "contacto"
                ],
                "description": "get Contacto by id",
                "operationId": "ContactoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Contacto"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "contacto"
                ],
                "description": "update the Contacto",
                "operationId": "ContactoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Contacto content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Contacto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Contacto"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "contacto"
                ],
                "description": "delete the Contacto",
                "operationId": "ContactoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/email/": {
            "get": {
                "tags": [
                    "email"
                ],
                "description": "get Email",
                "operationId": "EmailController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Email"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "email"
                ],
                "description": "create Email",
                "operationId": "EmailController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Email content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Email"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Email"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/email/{id}": {
            "get": {
                "tags": [
                    "email"
                ],
                "description": "get Email by id",
                "operationId": "EmailController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Email"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "email"
                ],
                "description": "update the Email",
                "operationId": "EmailController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Email content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Email"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Email"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "email"
                ],
                "description": "delete the Email",
                "operationId": "EmailController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/numero_telefonico/": {
            "get": {
                "tags": [
                    "numero_telefonico"
                ],
                "description": "get NumeroTelefonico",
                "operationId": "NumeroTelefonicoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.NumeroTelefonico"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "numero_telefonico"
                ],
                "description": "create NumeroTelefonico",
                "operationId": "NumeroTelefonicoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for NumeroTelefonico content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.NumeroTelefonico"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.NumeroTelefonico"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/numero_telefonico/{id}": {
            "get": {
                "tags": [
                    "numero_telefonico"
                ],
                "description": "get NumeroTelefonico by id",
                "operationId": "NumeroTelefonicoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.NumeroTelefonico"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "numero_telefonico"
                ],
                "description": "update the NumeroTelefonico",
                "operationId": "NumeroTelefonicoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for NumeroTelefonico content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.NumeroTelefonico"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.NumeroTelefonico"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "numero_telefonico"
                ],
                "description": "delete the NumeroTelefonico",
                "operationId": "NumeroTelefonicoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Contacto": {
            "title": "Contacto",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "Direccion": {
                    "type": "string"
                },
                "FechaCreacion": {
                    "type": "string"
                },
                "FechaModificacion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NombreCompleto": {
                    "type": "string"
                },
                "NumeroDocumento": {
                    "type": "string"
                }
            }
        },
        "models.Email": {
            "title": "Email",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "ContactoId": {
                    "$ref": "#/definitions/models.Contacto"
                },
                "Email": {
                    "type": "string"
                },
                "FechaCreacion": {
                    "type": "string"
                },
                "FechaModificacion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.NumeroTelefonico": {
            "title": "NumeroTelefonico",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "ContactoId": {
                    "$ref": "#/definitions/models.Contacto"
                },
                "FechaCreacion": {
                    "type": "string"
                },
                "FechaModificacion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NumeroContacto": {
                    "type": "string"
                }
            }
        }
    },
    "tags": [
        {
            "name": "contacto",
            "description": "ContactoController operations for Contacto\n"
        },
        {
            "name": "numero_telefonico",
            "description": "NumeroTelefonicoController operations for NumeroTelefonico\n"
        },
        {
            "name": "email",
            "description": "EmailController operations for Email\n"
        }
    ]
}